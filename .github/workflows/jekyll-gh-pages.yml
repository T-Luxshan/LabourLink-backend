name: CI/CD Pipeline for Spring Boot with MySQL

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - dev
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      db:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: testdb
        options: >-
          --health-cmd="mysqladmin ping -h localhost"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Java
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Step 3: Wait for MySQL to become healthy
      - name: Wait for MySQL
        run: |
          for i in {1..10}; do
            if mysqladmin ping -h 127.0.0.1 -u root -proot > /dev/null 2>&1; then
              echo "MySQL is up and running!"
              break
            fi
            echo "Waiting for MySQL..."
            sleep 5
          done

      # Step 4: Set up database connection in application.properties
      - name: Configure application properties
        run: |
          echo "spring.datasource.url=jdbc:mysql://localhost:3306/testdb" > src/main/resources/application.properties
          echo "spring.datasource.username=root" >> src/main/resources/application.properties
          echo "spring.datasource.password=root" >> src/main/resources/application.properties
          echo "spring.jpa.hibernate.ddl-auto=update" >> src/main/resources/application.properties

      # Step 5: Build and Test
      - name: Build and Test
        run: |
          mvn clean package
          mvn test

      # Optional: Upload build artifact (e.g., JAR file)
      - name: Upload JAR artifact
        uses: actions/upload-artifact@v3
        with:
          name: spring-boot-app
          path: target/*.jar
